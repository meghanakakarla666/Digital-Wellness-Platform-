// Export Utilities for Wellness Platform
class ExportUtils {
    static exportToPDF() {
        // Simple print for now - can be enhanced with html2pdf.js library
        const printContent = document.querySelector('.container-fluid').cloneNode(true);
        
        // Remove interactive elements for print
        printContent.querySelectorAll('button, .btn').forEach(btn => btn.remove());
        printContent.querySelectorAll('canvas').forEach(canvas => {
            const img = document.createElement('img');
            img.src = canvas.toDataURL();
            img.style.width = '100%';
            img.style.height = 'auto';
            canvas.parentNode.replaceChild(img, canvas);
        });
        
        const printWindow = window.open('', '_blank');
        printWindow.document.write(`
            <!DOCTYPE html>
            <html>
            <head>
                <title>Wellness Assessment Report</title>
                <link href="../css/bootstrap.min.css" rel="stylesheet">
                <link href="../css/style.css" rel="stylesheet">
                <link href="../css/dashboard.css" rel="stylesheet">
                <style>
                    @media print {
                        body { -webkit-print-color-adjust: exact; }
                        .no-print { display: none !important; }
                        .card { break-inside: avoid; }
                        .row { break-inside: avoid; }
                        .metric-card { page-break-inside: avoid; }
                    }
                </style>
            </head>
            <body>
                ${printContent.outerHTML}
                <script>
                    window.onload = function() {
                        setTimeout(function() {
                            window.print();
                            window.close();
                        }, 1000);
                    }
                </script>
            </body>
            </html>
        `);
        printWindow.document.close();
    }

    static exportToCSV(formData, results) {
        const csvData = [
            ['Metric', 'Value'],
            ['Name', `${formData.firstName || ''} ${formData.lastName || ''}`],
            ['Age', formData.age || ''],
            ['Gender', formData.gender || ''],
            ['Height (cm)', formData.height || ''],
            ['Weight (kg)', formData.weight || ''],
            ['BMI', results.bmi || ''],
            ['Health Score', results.healthScore || ''],
            ['Risk Level', results.riskLevel?.level || ''],
            ['Activity Level', formData.activityLevel || ''],
            ['Breakfast Habits', formData.breakfast || ''],
            ['Sleep Hours', formData.sleepHours || ''],
            ['Smoking Status', formData.smoking || ''],
            ['Fruits & Vegetables', formData.fruitsVeggies || ''],
            ['Water Intake', formData.waterIntake || ''],
            ['Assessment Date', new Date().toLocaleDateString()]
        ];

        const csvContent = csvData.map(row => 
            row.map(field => `"${field}"`).join(',')
        ).join('\n');
        
        const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
        const link = document.createElement('a');
        const url = URL.createObjectURL(blob);
        link.setAttribute('href', url);
        link.setAttribute('download', `wellness-assessment-${new Date().toISOString().split('T')[0]}.csv`);
        link.style.visibility = 'hidden';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }

    static shareResults(results, formData) {
        const summary = `My Wellness Assessment Results:
• Health Score: ${results.healthScore}/100
• BMI: ${results.bmi ? results.bmi.toFixed(1) : 'N/A'}
• Risk Level: ${results.riskLevel?.level || 'N/A'}
• Activity Level: ${formData.activityLevel || 'N/A'}

Generated by Digital Wellness Platform`;

        if (navigator.share) {
            navigator.share({
                title: 'My Wellness Assessment Results',
                text: summary,
                url: window.location.href
            });
        } else {
            // Fallback: copy to clipboard
            navigator.clipboard.writeText(summary).then(() => {
                alert('Results copied to clipboard!');
            }).catch(() => {
                // Fallback for older browsers
                const textArea = document.createElement('textarea');
                textArea.value = summary;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
                alert('Results copied to clipboard!');
            });
        }
    }
}

// Global export functions for button clicks
function exportResults() {
    const resultsData = localStorage.getItem('wellnessResults');
    const assessmentData = localStorage.getItem('wellnessAssessment');
    
    if (resultsData && assessmentData) {
        const results = JSON.parse(resultsData);
        const assessment = JSON.parse(assessmentData);
        ExportUtils.exportToCSV(assessment.formData, results);
    } else {
        alert('No assessment data found to export.');
    }
}

function printResults() {
    ExportUtils.exportToPDF();
}

function shareResults() {
    const resultsData = localStorage.getItem('wellnessResults');
    const assessmentData = localStorage.getItem('wellnessAssessment');
    
    if (resultsData && assessmentData) {
        const results = JSON.parse(resultsData);
        const assessment = JSON.parse(assessmentData);
        ExportUtils.shareResults(results, assessment.formData);
    } else {
        alert('No assessment data found to share.');
    }
}

// Export class for module use
window.ExportUtils = ExportUtils;
